* Operations to support
** Scalars
 - [ ] -s?
   - Could just use * -1
 - [X] s + s
 - [X] s - s
 - [X] s * s
 - [X] s / s
 - [ ] s ^ s
 - [ ] s % s
 - [ ] |s|
 - [ ] sqrt(s)
** Vectors
 - [X] v * s
 - [X] v / s
 - [X] v + v
 - [X] v - v
 - [X] v . v
 - [X] v x v
 - [X] ||v||
 - [X] norm(v) -> v
 - [ ] v.proj(v) -> v
 - [ ] lerp(v, v, s) -> v
 - [ ] rotate[XYZ](v, origin, rad) -> v
** Matrices
 - [X] m + m
 - [X] m - m
 - [X] m * m
 - [X] inverse(m) -> m
 - [ ] determinant(m) -> s
 - [ ] eigenvalue(m) -> s
 - [ ] eigenvector(m) -> v
 - [X] v * m -> v
 - [ ] translate/rotate/scale/skew helpers -> m
   - Should this produce a value, or should it act like an operation?  or both somehow?
   - Maybe inverse these functions too?
 - [X] transpose(m) -> m
** Mux/demux
 - [ ] v -> (s, s, s)
 - [ ] (s, s, s) -> v
 - [ ] m -> (v, v, v, v)
 - [ ] (v, v, v, v) -> m
** Trig
 - [ ] sin/cos/tan... etc(s) -> s
 - [X] angle_between(v, v) -> s
** Misc
 - [ ] rad -> deg, deg -> rad
   - or should this be a global option?
*** Quaternions?
*** Other geometry?
 - Sphere
 - Plane
*** Branching or other control flow?
* Operation types
| Operation | Supported input types                                            | s in           | v in            | m in            |
|-----------+------------------------------------------------------------------+----------------+-----------------+-----------------|
| +         | (s, s) -> s, (v, v) -> v, (m, m) -> m                            | s -> s         | v -> v          | m -> m          |
| -         | s -> s?, v -> v?, m -> m?, (s, s) -> s, (v, v) -> v, (m, m) -> m | s?, s -> s     | v?, v -> v      | m?, m -> m      |
| *         | (s, s) -> s, (v, s) -> v, (s, v) -> v, (m, m) -> m, (v, m) -> v? | s -> s, v -> v | s -> v, m -> v* | m -> m, v -> v* |
| /         | (s, s) -> s, (v, s) -> v, (s, v) -> v?                           | s -> s, v -> v | s -> v          |                 |
| ^         | (s, s) -> s                                                      | s -> s         |                 |                 |
| %         | (s, s) -> s                                                      | s -> s         |                 |                 |
| .         | (v, v) -> s                                                      |                | v -> s          |                 |
| x         | (v, v) -> v                                                      |                | v -> v          |                 |
** +
  IN                              OUT
| LHS \ RHS | S | V | M | A |   | LHS \ RHS | S | V | M | A |
|-----------+---+---+---+---+---+-----------+---+---+---+---|
| S         |   | - | - | s |   | S         | s | - | - |   |
| V         | - |   | - | v |   | V         | - | v | - |   |
| M         | - | - |   | m |   | M         | - | - | m |   |
| A         | s | v | m |   |   | A         |   |   |   | a |
** -
  IN                              OUT
| LHS \ RHS | S | V | M | A |   | LHS \ RHS | S | V | M | A |
|-----------+---+---+---+---+---+-----------+---+---+---+---|
| S         |   | - | - | s |   | S         | s | - | - |   |
| V         | - |   | - | v |   | V         | - | v | - |   |
| M         | - | - |   | m |   | M         | - | - | m |   |
| A         | s | v | m |   |   | A         |   |   |   | a |
** *
  IN                               OUT
| LHS \ RHS | S | V | M | A  |   | LHS \ RHS | S | V | M  | A |
|-----------+---+---+---+----+---+-----------+---+---+----+---|
| S         |   |   |   | a  |   | S         | s | v | m  |   |
| V         |   | - |   | sm |   | V         | v | - | v  | v |
| M         |   | - |   | sm |   | M         | m | - | m  | m |
| A         | a | s | a |    |   | A         |   | v | vm | a |
** /
  IN                              OUT
| LHS \ RHS | S | V | M | A |   | LHS \ RHS | S | V | M | A |
|-----------+---+---+---+---+---+-----------+---+---+---+---|
| S         |   | - | - | s |   | S         | s | - | - |   |
| V         |   | - | - | s |   | V         | v | - | - |   |
| M         |   | - | - | s |   | M         | m | - | - |   |
| A         | a | - | - | s |   | A         | a | - | - |   |
* 2D mode?
* Named save/load support
* Misc viewport
- [ ] Draggable quadrants
* Misc node editor
 - More operation types
** Undo/redo support
 - [ ] Current history plugin does not give access to undo stack, which prevents
   me from doing a couple things.  Maybe submit a patch to the plugin, or write
   my own, or just try to find some workarounds...
   - https://github.com/retejs/history-plugin/issues/2
     - [X] Need to re-work BasicOperationComponent to not change any state in
       worker().  Re-write functions to be pure, traverse graph myself.
   - [ ] "Collapse" multiple similar actions (node value updates, cascading
     socket type changes + connection changes, etc.)
   - [ ] Save undo/redo state between page loads?
   - [ ] Clear history stack on load to avoid being able to undo loading?
     (breaks saving between page loads if I go that way)
** Camera
 - [ ] Recenter view on page load?
 - [X] Recenter view try to fit all nodes
 - [ ] Right click pan to match viewport?
 - [ ] Left click box select?
 - [X] When adding nodes, add to center of view and only reposition if node too close to center
** Nodes
 - [X] More render settings
   - [X] "Render at pos"/"Origin"
   - [X] Togglable rendering, or maybe just alpha support
   - [X] Random output colors
   - [X] Hide some of these in a "show advanced render settings" option?
 - [ ] Custom node titles
   - [ ] Render node name in viewport?
 - [ ] Custom paste handler
 - [ ] Slightly wider vector input (enough for 3 digits + decimal)
   - [ ] Configurable?
 - [ ] Truncate input display values
 - [ ] Condense everything a bit more if possible
** Node types
 - [ ] Render scalar values
   - [ ] As circle
     - [ ] Update on horizontal resize, or figure out how to write in such a way that viewport size doesn't matter
       - Can I somehow use the camera's current matrices?
   - [ ] As vector?
 - [-] Render matrices?
   - [ ] grid w/ transform?
   - [X] vector field?
*** Matrix support
 - [ ] New matrix icon?
** Plugins
 - [[https://rete.js.org/#/docs/plugins/keyboard][Keyboard plugin]]
   - Delete hotkey
   - Could I modify this to get copy-paste?
 - [[https://rete.js.org/#/docs/plugins/area][Area plugin]]
   - I think this just gives view recentering like I do manually, but it also gives zoom/translate bounds on the canvas
 - [[https://rete.js.org/#/docs/plugins/code][Code plugin]]
   - Generate JS from node editor (can I go the other way too?)
 - [[https://rete.js.org/#/docs/plugins/minimap][Minimap plugin]]
 - [[https://rete.js.org/#/docs/plugins/auto-arrange][Auto-arrange plugin]]
   - Tried using this and it didn't seem to work...
 - [[https://rete.js.org/#/docs/plugins/history][History plugin]]
   - Undo/redo support!
* Hosting/ads/etc
